@charset "UTF-8";

//-----------------------------------------------------
// mixin scss
// 包括常用的mixin, %, @function 及辅助的btn和背景图片icon
// mixin，通过@include调用，样式通过拷贝的方式使用，尤其适用于传递参数
// %，通过@extend调用，样式通过组合申明的方式使用，适用于不传参数的代码片段
// @function，返回一个值，用于调用
//-----------------------------------------------------

// mixin & %
// 既定义了mixin也定义了%，根据需求使用@include或@extend调用
//-----------------------------------------------------

// ellipsis
@mixin ellipsis($extend: true) {
    @if $extend {
        @extend %ellipsis;
    }
    @else {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
}

%ellipsis {
    @include ellipsis(false);
}

// ellipsis lines
// only old webkit flex box
@mixin ellipsis-lines($lines: 2) {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
}

// word-break
@mixin word-break($extend: true) {
    @if $extend {
        @extend %word-break;
    }
    @else {
        white-space: normal;
        word-wrap: break-word;
        word-break: break-all;
    }
}

%word-break {
    @include word-break(false);
}


// flex center
@mixin center-flex($direction: both) {
    display: flex;
    @if $direction == both {
        justify-content: center;
        align-items: center;
    }
    @else if $direction == x {
        justify-content: center;
    }
    @else if $direction == y {
        align-items: center;
    }
}

// translate center
@mixin center-translate($direction: both) {
    position: absolute;
    @if $direction == both {
        top: 50%;
        left: 50%;
        transform: translate3d(-50%, -50%, 0);
    }
    @else if $direction == x {
        left: 50%;
        transform: translate3d(-50%, 0, 0);
    }
    @else if $direction == y {
        top: 50%;
        transform: translate3d(0, -50%, 0);
    }
}


// triangle 三角箭头
// 可采用空元素或伪元素生成，具体定位这里不涉及
%triangle-basic {
    content: "";
    height: 0;
    width: 0;
    overflow: hidden;
}

@mixin triangle($direction: top, $borderWidth: 6px, $borderColor: $colorC) {
    @extend %triangle-basic;
    @if $direction == top {
        border-bottom: $borderWidth solid $borderColor;
        border-left: $borderWidth dashed transparent;
        border-right: $borderWidth dashed transparent;
    }
    @else if $direction == right {
        border-left: $borderWidth solid $borderColor;
        border-top: $borderWidth dashed transparent;
        border-bottom: $borderWidth dashed transparent;
    }
    @else if $direction == bottom {
        border-top: $borderWidth solid $borderColor;
        border-left: $borderWidth dashed transparent;
        border-right: $borderWidth dashed transparent;
    }
    @else if $direction == left {
        border-right: $borderWidth solid $borderColor;
        border-top: $borderWidth dashed transparent;
        border-bottom: $borderWidth dashed transparent;
    }
}

// v arrow 方向箭头
@mixin v-arrow($direction: right, $borderWidth: 2px, $size: 10px) {
    display: inline-block;
    vertical-align: middle;
    width: $size;
    height: $size;
    @if $direction == top {
        border-top: $borderWidth solid currentColor;
        border-right: $borderWidth solid currentColor;
        transform: rotate(-45deg);
    }
    @else if $direction == right {
        border-top: $borderWidth solid currentColor;
        border-right: $borderWidth solid currentColor;
        transform: rotate(45deg);
    }
    @else if $direction == bottom {
        border-left: $borderWidth solid currentColor;
        border-bottom: $borderWidth solid currentColor;
        transform: rotate(-45deg);
    }
    @if $direction == left {
        border-left: $borderWidth solid currentColor;
        border-bottom: $borderWidth solid currentColor;
        transform: rotate(45deg);
    }
}

// item arrow, 右侧箭头跳转指向
%item-v-right {
    &::after {
        content: "";
        @include v-arrow;
        color: #c0c0c0;
        position: absolute;
        right: 15px;
        top: 50%;
        margin-top: -1px;
        transform: rotate(45deg) translate(0, -50%);
        box-sizing: border-box;
    }
}


@mixin before($width,$height, $bg) {
    position: relative;
    &:before{
        content: ''; display: inline-block; width: $width; height: $height; position: absolute; top: 50%; transform: translateY(-50%);
        background: url($bg) no-repeat center; background-size: cover;
    }
}

@mixin ftc($fontSize: 14px, $lineHg: 14px, $color: #283039) {
    font-size: $fontSize; line-height: $lineHg; color: $color;
}

@mixin bis($url){
    background-image: url($url);
    background-repeat: no-repeat;
    background-size: cover;
}

@mixin wh($width, $height) {
    width: $width; height: $height;
}
@mixin fflex($conm: space-between) {
    display: flex; justify-content: $conm; align-items: center;
}

@mixin dwh($width, $height ) {
    display: inline-block; width: $width; height: $height;
}
